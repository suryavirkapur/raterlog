// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          String        @id
  name        String
  email       String        @unique
  password    String
  sessions    Session[]
  CompanyUser CompanyUser[]
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model Company {
  id          String        @id
  name        String
  billing     Boolean
  CompanyUser CompanyUser[]
  Token       Token[]
  Channel     Channel[]
}

model Channel {
  id        String  @unique
  name      String
  companyID String
  company   Company @relation(fields: [companyID], references: [id])
  Log       Log[]

  @@id([id, companyID])
}

model Log {
  channelID    String
  channel      Channel @relation(fields: [channelID], references: [id])
  timestamp    String
  eventName    String
  eventPayload String

  @@id([channelID, timestamp])
}

model CompanyUser {
  companyID String
  userID    String
  user      User    @relation(fields: [userID], references: [id])
  company   Company @relation(fields: [companyID], references: [id])

  @@id([companyID, userID])
}

model Token {
  id        Int     @id @default(autoincrement())
  name      String
  token     String
  companyID String
  company   Company @relation(fields: [companyID], references: [id])
}

model Car {
  id        Int     @id @default(autoincrement())
  model     String
  make      String
  price     Int
  published Boolean @default(true)
}
